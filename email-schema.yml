openapi: 3.0.0
info:
  title: Email Service API (DRAFT)
  description: |
    Provides capabilities for sending various types of emails, initially focusing on
    onboarding emails for users. This service integrates with SendGrid for email delivery.
    Future enhancements may include other transactional email types.
  version: 0.1.0
  contact:
    name: API Support Team
    email: apiSupportTeam@lvnv.com
    url: https://www.lvnv.com/support

tags:
  - name: Email
    description: Operations for sending onboarding and transactional emails

servers:
  - url: https://prod.api.example.com/email
    description: Production server
  - url: https://staging.api.example.com/email
    description: Staging server
  - url: https://dev.api.example.com/email
    description: Development server

security:
  - ServiceBearerAuth: []

paths:
  /v1/email/send/users/{userId}:
    post:
      summary: Send onboarding email to user
      description: |
        Initiates the process of sending a templated onboarding email to a specific user.
        The email content can be customized based on the user's organizations.
        This operation relies on SendGrid for the actual email dispatch.
      operationId: sendOnboardingEmail
      tags:
        - Email
      parameters:
        - $ref: '#/components/parameters/UserIdPathParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SendOnboardingEmailRequest"
      responses:
        "202":
          description: Email successfully queued for delivery
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SendOnboardingEmailResponse"
        "400": { $ref: "../../lib/commonResponses.yml#/components/responses/BadRequest" }
        "401": { $ref: "../../lib/commonResponses.yml#/components/responses/Unauthorized" }
        "403": { $ref: "../../lib/commonResponses.yml#/components/responses/Forbidden" }
        "429": { $ref: "../../lib/commonResponses.yml#/components/responses/TooManyRequests" }
        "500": { $ref: "../../lib/commonResponses.yml#/components/responses/InternalServerError" }

components:
  securitySchemes:
    ServiceBearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: "Bearer token for service authorization. The token is typically a JWT."

  parameters:
    UserIdPathParam:
      name: userId
      in: path
      required: true
      description: Unique identifier of the user.
      schema:
        type: string
        format: uuid

  schemas:
    SendOnboardingEmailRequest:
      type: object
      properties:
        templateName:
          type: string
          enum:
            - organization-onboarding
          description: "Name of the email template to use. This must correspond to an existing template in SendGrid."
        organizations:
          type: array
          items:
            type: string
            description: "The unique identifier for an organization."
          minItems: 1
          description: "A list of organization IDs to which the onboarding email pertains. Context for these organizations will be included in the email."
      required:
        - templateName
        - organizations
      example:
        templateName: organization-onboarding
        organizations:
          - "63e55304-0c0c-47ec-973a-e75bcbdbf1c0"
          - "d2f8b1c4-3e5a-4f8b-9c0d-7e1f2b3c4d5e"

    SendOnboardingEmailResponse:
      type: object
      properties:
        message:
          type: string
          description: Confirmation message indicating the email has been queued.
          example: Email queued for delivery
        messageId:
          type: string
          format: uuid
          description: Unique identifier of the queued email

    ErrorResponse:
      type: object
      description: "A standard error response structure."
      properties:
        code:
          type: integer
          description: "The HTTP status code or an internal error code."
        message:
          type: string
          description: "A human-readable message providing details about the error."
        details:
          type: array
          items:
            type: string
            description: "An individual error detail or validation message."
          description: "An optional list of more specific error messages or validation issues."
      example:
        code: 400
        message: Invalid input payload
        details:
          - organizations must not be empty
